/*
 * Galacticraft Capes API
 * Galacticraft Cape API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GalacticraftCapesApi);
  }
}(this, function(expect, GalacticraftCapesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GalacticraftCapesApi.CapeApi();
  });

  describe('(package)', function() {
    describe('CapeApi', function() {
      describe('addCape', function() {
        it('should call addCape successfully', function(done) {
          // TODO: uncomment, update parameter values for addCape call
          /*
          var body = new GalacticraftCapesApi.Cape();
          body.name = "redCape";
          body.type = new GalacticraftCapesApi.Type();
          body.type.type = "legacy";

          instance.addCape(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteCape', function() {
        it('should call deleteCape successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteCape call
          /*
          var capeName = "capeName_example";

          instance.deleteCape(capeName, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getCapeByName', function() {
        it('should call getCapeByName successfully', function(done) {
          // TODO: uncomment, update parameter values for getCapeByName call and complete the assertions
          /*
          var capeName = "capeName_example";

          instance.getCapeByName(capeName, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(GalacticraftCapesApi.Cape);
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("redCape");
            expect(data.type).to.be.a(GalacticraftCapesApi.Type);
                  expect(data.type.type).to.be.a('string');
              expect(data.type.type).to.be("legacy");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateCape', function() {
        it('should call updateCape successfully', function(done) {
          // TODO: uncomment, update parameter values for updateCape call
          /*
          var capeName = "capeName_example";

          instance.updateCape(capeName, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
