/*
 * Galacticraft Capes API
 * Galacticraft Cape API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GalacticraftCapesApi);
  }
}(this, function(expect, GalacticraftCapesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GalacticraftCapesApi.UserApi();
  });

  describe('(package)', function() {
    describe('UserApi', function() {
      describe('createUser', function() {
        it('should call createUser successfully', function(done) {
          // TODO: uncomment, update parameter values for createUser call and complete the assertions
          /*
          var body = new GalacticraftCapesApi.User();
          body.uuid = new GalacticraftCapesApi.GUUID();
          body.uuid.dashed = "046b6c7f-0b8a-43b9-b35d-6489e6daee91";
          body.uuid.plain = "046b6c7f0b8a43b9b35d6489e6daee91";
          body.username = "";
          body.player = new GalacticraftCapesApi.Player();
          body.player.uuid = new GalacticraftCapesApi.GUUID();
          body.player.uuid.dashed = "046b6c7f-0b8a-43b9-b35d-6489e6daee91";
          body.player.uuid.plain = "046b6c7f0b8a43b9b35d6489e6daee91";
          body.player.name = "Micdoodle8";
          body.player.cape = new GalacticraftCapesApi.Cape();
          body.player.cape.name = "redCape";
          body.player.cape.type = new GalacticraftCapesApi.Type();
          body.player.cape.type.type = "legacy";
          body.player.allowedCapes = new GalacticraftCapesApi.Type();
          body.player.allowedCapes.type = "legacy";

          instance.createUser(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(GalacticraftCapesApi.ApiResponse);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.message).to.be.a('string');
            expect(data.message).to.be("RETURN OK");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteUser', function() {
        it('should call deleteUser successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteUser call
          /*
          var username = "username_example";

          instance.deleteUser(username, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getUserByName', function() {
        it('should call getUserByName successfully', function(done) {
          // TODO: uncomment, update parameter values for getUserByName call and complete the assertions
          /*
          var username = "username_example";

          instance.getUserByName(username, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(GalacticraftCapesApi.User);
            expect(data.uuid).to.be.a(GalacticraftCapesApi.GUUID);
                  expect(data.uuid.dashed).to.be.a('string');
              expect(data.uuid.dashed).to.be("046b6c7f-0b8a-43b9-b35d-6489e6daee91");
              expect(data.uuid.plain).to.be.a('string');
              expect(data.uuid.plain).to.be("046b6c7f0b8a43b9b35d6489e6daee91");
            expect(data.username).to.be.a('string');
            expect(data.username).to.be("");
            expect(data.player).to.be.a(GalacticraftCapesApi.Player);
                  expect(data.player.uuid).to.be.a(GalacticraftCapesApi.GUUID);
                    expect(data.player.uuid.dashed).to.be.a('string');
                expect(data.player.uuid.dashed).to.be("046b6c7f-0b8a-43b9-b35d-6489e6daee91");
                expect(data.player.uuid.plain).to.be.a('string');
                expect(data.player.uuid.plain).to.be("046b6c7f0b8a43b9b35d6489e6daee91");
              expect(data.player.name).to.be.a('string');
              expect(data.player.name).to.be("Micdoodle8");
              expect(data.player.cape).to.be.a(GalacticraftCapesApi.Cape);
                    expect(data.player.cape.name).to.be.a('string');
                expect(data.player.cape.name).to.be("redCape");
                expect(data.player.cape.type).to.be.a(GalacticraftCapesApi.Type);
                      expect(data.player.cape.type.type).to.be.a('string');
                  expect(data.player.cape.type.type).to.be("legacy");
              expect(data.player.allowedCapes).to.be.a(GalacticraftCapesApi.Type);
                    expect(data.player.allowedCapes.type).to.be.a('string');
                expect(data.player.allowedCapes.type).to.be("legacy");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('loginUser', function() {
        it('should call loginUser successfully', function(done) {
          // TODO: uncomment, update parameter values for loginUser call and complete the assertions
          /*
          var username = "username_example";
          var password = "password_example";

          instance.loginUser(username, password, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(GalacticraftCapesApi.ApiResponse);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.message).to.be.a('string');
            expect(data.message).to.be("RETURN OK");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('logoutUser', function() {
        it('should call logoutUser successfully', function(done) {
          // TODO: uncomment logoutUser call
          /*

          instance.logoutUser(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateUser', function() {
        it('should call updateUser successfully', function(done) {
          // TODO: uncomment, update parameter values for updateUser call
          /*
          var username = "username_example";
          var body = new GalacticraftCapesApi.User();
          body.uuid = new GalacticraftCapesApi.GUUID();
          body.uuid.dashed = "046b6c7f-0b8a-43b9-b35d-6489e6daee91";
          body.uuid.plain = "046b6c7f0b8a43b9b35d6489e6daee91";
          body.username = "";
          body.player = new GalacticraftCapesApi.Player();
          body.player.uuid = new GalacticraftCapesApi.GUUID();
          body.player.uuid.dashed = "046b6c7f-0b8a-43b9-b35d-6489e6daee91";
          body.player.uuid.plain = "046b6c7f0b8a43b9b35d6489e6daee91";
          body.player.name = "Micdoodle8";
          body.player.cape = new GalacticraftCapesApi.Cape();
          body.player.cape.name = "redCape";
          body.player.cape.type = new GalacticraftCapesApi.Type();
          body.player.cape.type.type = "legacy";
          body.player.allowedCapes = new GalacticraftCapesApi.Type();
          body.player.allowedCapes.type = "legacy";

          instance.updateUser(username, body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
